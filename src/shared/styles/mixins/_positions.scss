@mixin flexed($justify: center, $align: center) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
}

@mixin absolute($top: 50%, $left: 50%, $X: -50%, $Y: -50%) {
  position: absolute;
  top: $top;
  left: $left;
  transform: translate($X, $Y);
}

// How to use:
// @include flexed(justify-content, align items):
// display:flex - идет по умолчанию
// Если ичего не передавать в аргументах, то justify-content и align-items будут иметь значение center.
// Подобная ситуация с абсолюбом, только значений больше, 1й аргумент - top, 2й - left, 3й - translateX, 4й - translateY
// Если ничего не указать. то элемент станет по центру родителя имеющего position отличную от static.

@mixin grid-fixed($columns: 1, $row-gap: 0, $column-gap: 0) {
  display: grid;

  grid-template-columns: 1fr;
  row-gap: $row-gap;
  justify-items: center;

  @if $columns >= 2 {
    @if $column-gap >= 1 {
      grid-template-columns: repeat(
        auto-fit,
        minmax(calc((100% - ($column-gap * ($columns - 1))) / $columns), 1fr)
      );
      row-gap: $row-gap;
      column-gap: $column-gap;
    } @else {
      grid-template-columns: repeat(
        auto-fit,
        minmax(calc(100% / $columns), 1fr)
      );
      row-gap: $row-gap;
      column-gap: $column-gap;
    }
  }
}
